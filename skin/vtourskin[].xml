<krpano>
	<!-- krpano 1.16.5 - Default Virtual Tour Skin -->
	<include url="skin_thumbs.xml" />
	<!-- Global Skin settings (can be overridden in the 'outer' xml) -->
	<skin_settings bingmaps="false"
	               bingmaps_key=""
	               bingmaps_zoombuttons="false"
	               gyro="true"
	               thumbs_width="160" thumbs_height="85" thumbs_padding="20" thumbs_crop="0|40|240|160"

	               thumbs_opened="false"
	               thumbs_text="false"
	               thumbs_dragging="true"
	               thumbs_scrollindicator="false"
	               tooltips_thumbs="true"
	               tooltips_hotspots="false"
	               tooltips_mapspots="false"
	               controlbar_offset="30"
	               />


	<!-- Skin Styles -->

	<!-- skin_base - the base skin image -->
	<style name="skin_base" url="vtourskin.png" />

	<!-- skin_glow - button glowing, if ondown/onup events were needed, then ondown2/onup2 need to be used instead when using this style -->
	<style name="skin_glow"
	       ondown="copy(skin_lockglow,name); skin_buttonglow(get(name)); if(ondown2, ondown2() );"
	       onover="if(skin_lockglow === null, copy(skin_lockglow,name); skin_buttonglow(get(name),0.3) ); "
	       onout="if(skin_lockglow === name, ifnot(pressed, skin_buttonglow(null);delete(skin_lockglow); ));"
	       onup="if(hovering, skin_buttonglow(get(name),0.3), skin_buttonglow(null);delete(skin_lockglow); ); if(onup2, onup2() );"
	       />

	<!-- skin_thumbtext_style - style/textfield for the (optional, skin_settings.thumbs_text) thumbnails texts -->
	<style name="skin_thumbtext_style" url="%SWFPATH%/plugins/textfield.swf" align="bottom" width="100%" autoheight="true" y="5" enabled="false" background="false" border="false" css="text-align:center; color:#FFFFFF; font-family:Arial; font-weight:bold; font-size:10px;" textshadow="1" />

	<!-- skin_hotspotstyle - style for the hotspots (note - the onclick event will be overwritten! the hotspots need to have a 'linkedscene' attribute to be clickable) -->
	<style name="skin_hotspotstyle" url="vtourskin_hotspot.png" scale="0.5" edge="top" oy="0"
	       distorted="true"
	       onclick="if(linkedscene, tween(scale,0.25,0.5); tween(oy,-20,0.5); tween(alpha,0,0.5); looktohotspot(); loadscene(get(linkedscene),null,MERGE,BLEND(1)); skin_updatescroll(); );"
	       onhover="if(skin_settings.tooltips_hotspots, if(linkedscene, showtext(get(scene[get(linkedscene)].title),SKIN_TOOLTIPS)) );"
	       />

	<!-- tooltips textstyle -->
	<textstyle name="SKIN_TOOLTIPS" font="Arial" fontsize="16" bold="true" italic="false" background="false" border="false" textcolor="0xFFFFFF" effect="dropshadow(1,45,0x000000,4,1);" fadeintime="0.1" fadetime="0.05" />


	<!-- Skin Layout -->

	<layer name="skin_scroll_window" type="container" keep="true" align="leftbottom" width="100%" height="100%" x="0" y="60" y_opened="60" y_closed="-2" maskchildren="true">
		<layer name="skin_scroll_layer" type="container" align="leftbottom" width="100%" height="100%" x="0" y="-100%">
			<layer name="skin_topborder" style="skin_base" crop="2|0|60|12" align="topleft" edge="bottomleft" width="100%" height="12" x="0" y="0" enabled="false" />
			<layer name="skin_title" url="%SWFPATH%/plugins/textfield.swf" align="lefttop" edge="leftbottom" width="95%" height="32" autoheight="true" x="5" y="-3" zorder="4" enabled="false" background="false" border="false" css="text-align:left; color:#FFFFFF; font-family:Arial; font-weight:bold; font-size:16px;" textshadow="1" visible="false" />
			<layer name="skin_scroll_container" type="container" bgcolor="0x000000" bgalpha="0.5" align="lefttop" width="100%" height="100%" x="0" y="0" maskchildren="true">
				<layer name="skin_thumbs_container" type="container" align="lefttop" width="100%" height="100%" visible="false">
					<layer name="skin_thumbs_scrollleft"  style="skin_base|skin_glow" crop="0|64|64|64"  align="lefttop"  edge="left"  x="5" y="50" scale="0.5" zorder="2" alpha="1.0" ondown2="asyncloop(pressed, layer[skin_thumbs].scrollby(+2,0));" visible="false" />
					<layer name="skin_thumbs_scrollright" style="skin_base|skin_glow" crop="64|64|64|64" align="righttop" edge="right" x="5" y="50" scale="0.5" zorder="2" alpha="1.0" ondown2="asyncloop(pressed, layer[skin_thumbs].scrollby(-2,0));" visible="false" />
					<layer name="skin_thumbs_scrollindicator" type="container" bgcolor="0xFFFFFF" bgalpha="0.25" align="lefttop" width="0" y="100" height="4" visible="false" enabled="false" />
					<layer name="skin_thumbs" state="closed" url="%SWFPATH%/plugins/scrollarea.swf" alturl="%SWFPATH%/plugins/scrollarea.js" direction="h" align="top" width="100%" height="100" zorder="1" onloaded="skin_updatescroll();" onscroll="skin_updatethumbscroll();" />
				</layer>
				<layer name="skin_content_container" state="closed" url="%SWFPATH%/skin/opaque.png" flash_url="%SWFPATH%/skin/opaque.png" html5_url="%SWFPATH%/skin/opaque.png" visible="true" align="lefttop" width="100%" height="50%" x="0" y="0" zorder="1" active_content="">
					<layer name="skin_plan_container" maskchildren="false" state="closed" url="%SWFPATH%/skin/opaque.png" visible="false" align="center" width="100%" height="100%" x="0" zorder="1" active_content="">
						<plugin name="planzoominbtn" style="skin_base|skin_glow"	crop="00|512|64|64" align="topleft" visible="true" enabled="true" handcursor="true" alpha="0.80" x="00" y="00" zorder="2" onclick="zoomplan(get(currpanomappoint), 0.2);" />
						<plugin name="planzoomoutbtn" style="skin_base|skin_glow"	crop="64|512|64|64" align="topleft" visible="true" enabled="true" handcursor="true" alpha="0.80" x="00" y="64" zorder="2" onclick="zoomplan(get(currpanomappoint), -0.2);" />
						<layer name="skin_plan_plans_container" state="closed" url="%SWFPATH%/plugins/scrollarea.swf" alturl="%SWFPATH%/plugins/scrollarea.js" visible="true" align="center" width="100%" height="100%" x="0" y="0" zorder="1" active_content=""/>
						
					</layer>
					<layer name="skin_onlinemaps_container" state="closed" url="%SWFPATH%/skin/opaque.png" visible="false" align="center" width="100%" height="100%" x="0" y="0" zorder="1" active_content=""/>
					<layer name="skin_gallery_container" state="closed" url="%SWFPATH%/skin/opaque.png" visible="false" align="center" width="1920" height="1080" x="0" y="0" zorder="1" active_content=""/>

					<layer name="skin_info_container" maskchildren="false" state="closed" url="%SWFPATH%/skin/opaque.png" visible="false" align="center" width="100%" height="100%" x="0" zorder="1" active_content="">
						<plugin name="infozoominbtn" style="skin_base|skin_glow"	crop="00|512|64|64" align="topleft" visible="true" enabled="true" handcursor="true" alpha="0.80" x="00" y="00" zorder="2" onclick="zoomcontent(infoimage, 0.2);" />
						<plugin name="infozoomoutbtn" style="skin_base|skin_glow"	crop="64|512|64|64" align="topleft" visible="true" enabled="true" handcursor="true" alpha="0.80" x="00" y="64" zorder="2" onclick="zoomcontent(infoimage, -0.2);" />
						<layer name="skin_info_scrollarea" state="closed" url="%SWFPATH%/plugins/scrollarea.swf" alturl="%SWFPATH%/plugins/scrollarea.js" visible="true" align="center" width="500" height="500" x="0" y="0" zorder="1" active_content=""/>
					</layer>
					
					<layer name="skin_aboutus_container" state="closed" url="%SWFPATH%/plugins/scrollarea.swf" alturl="%SWFPATH%/plugins/scrollarea.js" visible="false" align="center" width="1920" height="1080" x="0" y="0" zorder="1" active_content=""/>
				</layer>
			</layer>
		</layer>
	</layer>

	<layer name="skin_control_bar" keep="true" type="container" bgcolor="0x000000" bgalpha="0.5" align="leftbottom" width="100%" height="40" x="0" y="20" y_opened="20" y_closed="-42" zorder="3">
		<layer name="skin_btmborder"  style="skin_base"           crop="2|52|60|12"   align="bottomleft" edge="topleft" width="100%" height="12" x="0" y="0" enabled="false" />
		
		<layer name="skin_btn_prev"			style="skin_base|skin_glow" crop="0|64|64|64"	align="left" edge="left"	x="10"	y="0"	scale="0.5" alpha="0.5"  onclick="skin_nextscene(-1);" onhover="showtext(get(prevtxt),get(langtextstyle));" />
		<layer name="skin_btn_thumbs"		style="skin_base|skin_glow" crop="0|128|64|64"	align="left" edge="left"	x="50"	y="0"   scale="0.5" ondown2="skin_showcontent_container(ee, false); skin_showthumbs();" onhover="showtext(get(thumbstxt),get(langtextstyle));" />
		<layer name="skin_btn_next"			style="skin_base|skin_glow" crop="64|64|64|64"	align="left" edge="left"	x="90"	y="0"   scale="0.5" alpha="0.5"  onclick="skin_nextscene(+1);" onhover="showtext(get(nexttxt),get(langtextstyle));" />
		<layer name="skin_btn_map"			style="skin_base|skin_glow" crop="64|128|64|64"	align="left" edge="left"	x="130"	y="-20"   scale="0.5" ondown2="skin_showthumbs(false); skin_showcontent_container();" visible="false" onhover="showtext(get(maptxt),get(langtextstyle));" />
		<layer name="skin_btn_plan"   		style="skin_base|skin_glow" crop="00|640|64|64"	align="left" edge="left"	x="130"	y="0"   scale="0.5" ondown2="skin_showthumbs(false); skin_showcontent_container(skin_plan_container);" onhover="showtext(get(plantxt),get(langtextstyle));"		visible="true" />
		<layer name="skin_btn_onlinemap"	style="skin_base|skin_glow" crop="64|128|64|64"	align="left" edge="left"	x="170"	y="0"   scale="0.5" ondown2="skin_showthumbs(false); skin_showcontent_container(skin_onlinemaps_container);" onhover="showtext(get(onlinemaptxt),get(langtextstyle));"			visible="true" />
		<!--layer name="skin_btn_gallery"		enabled="false" style="skin_base|skin_glow" crop="64|704|64|64"	align="left" edge="left"	x="210"	y="0"   scale="0.5" ondown2="skin_showthumbs(false); skin_showcontent_container(skin_gallery_container);" onhover="showtext(get(gallerytxt),get(langtextstyle));"	visible="true" autoalpha="true" alpha="0.7" /-->
		<layer name="skin_btn_help"			style="skin_base|skin_glow" crop="00|704|64|64"	align="left" edge="left"	x="210"	y="0"   scale="0.5" ondown2="ToggleHelpPic();" onhover="showtext(get(helptxt),get(langtextstyle));"		visible="true" />
		<layer name="skin_btn_info"			style="skin_base|skin_glow" crop="64|640|64|64"	align="left" edge="left"	x="250"	y="0"   scale="0.5" ondown2="skin_showthumbs(false); skin_showcontent_container(skin_info_container);" onhover="showtext(get(infotxt),get(langtextstyle));"	visible="true" />

		<layer name="skin_btn_lt"	style="skin_base|skin_glow" crop="0|192|64|64"  align="center"	x="-100"	y="0"   scale="0.5" ondown2="set(hlookat_moveforce,-1);" onup2="set(hlookat_moveforce,0);" onhover="showtext(get(lefttxt),get(langtextstyle));" />
		<layer name="skin_btn_rt"	style="skin_base|skin_glow" crop="64|192|64|64" align="center"	x="-60"		y="0"   scale="0.5" ondown2="set(hlookat_moveforce,+1);" onup2="set(hlookat_moveforce,0);" onhover="showtext(get(righttxt),get(langtextstyle));" />
		<layer name="skin_btn_up"	style="skin_base|skin_glow" crop="0|256|64|64"  align="center"	x="-20"		y="0"   scale="0.5" ondown2="set(vlookat_moveforce,-1);" onup2="set(vlookat_moveforce,0);" onhover="showtext(get(uptxt),get(langtextstyle));" />
		<layer name="skin_btn_dn"	style="skin_base|skin_glow" crop="64|256|64|64" align="center"	x="+20"		y="0"   scale="0.5" ondown2="set(vlookat_moveforce,+1);" onup2="set(vlookat_moveforce,0);" onhover="showtext(get(downtxt),get(langtextstyle));" />
		<layer name="skin_btn_in"	style="skin_base|skin_glow" crop="0|320|64|64"  align="center"	x="+60"		y="0"   scale="0.5" ondown2="set(fov_moveforce,-1);"     onup2="set(fov_moveforce,0);" onhover="showtext(get(zoomintxt),get(langtextstyle));" />
		<layer name="skin_btn_ou"	style="skin_base|skin_glow" crop="64|320|64|64" align="center"	x="+100"	y="0"   scale="0.5" ondown2="set(fov_moveforce,+1);"     onup2="set(fov_moveforce,0);" onhover="showtext(get(zoomouttxt),get(langtextstyle));" />
		
		<layer name="skin_btn_quit" devices="standalone" style="skin_base|skin_glow" crop="64|768|64|64"	align="right" edge="right"	x="10"	y="0"   scale="0.5" ondown2="fscommand('quit');" onhover="showtext(get(quittxt),get(langtextstyle));" visible="true" />
		<layer name="skin_btn_jni"	devices="standalone" style="skin_base|skin_glow" crop="0|768|64|64"	align="right" edge="right"	x="50"	y="0"   scale="0.5" ondown2="skin_showthumbs(false); skin_showcontent_container(skin_aboutus_container);" onhover="showtext(get(aboutustxt),get(langtextstyle));" visible="true" />
		<layer name="skin_btn_jni"	devices="!standalone" style="skin_base|skin_glow" crop="0|768|64|64"	align="right" edge="right"	x="10"	y="0"   scale="0.5" ondown2="skin_showthumbs(false); skin_showcontent_container(skin_aboutus_container);" onhover="showtext(get(aboutustxt),get(langtextstyle));" visible="true" />

		<layer name="skin_btn_hide"	style="skin_base|skin_glow" crop="0|448|64|64"	align="right" edge="right"	x="10"	y="36"   scale="0.5" onclick="skin_hideskin()" onhover="showtext(get(hidemenutxt),get(langtextstyle));" />
		<layer name="skin_btn_show"	style="skin_base|skin_glow" crop="64|448|64|64"	align="right" edge="right"	x="10"	y="-36" scale="0.5" alpha="0" visible="false" onclick="skin_showskin()" onhover="showtext(get(showmenutxt),get(langtextstyle));" />

	</layer>

	<layer name="skin_loadingtext"  keep="true" url="%SWFPATH%/plugins/textfield.swf" align="center" x="5" y="-5" html="loading..." visible="false" autoheight="true" background="false" border="false" enabled="false" css="text-align:center; color:#FFFFFF; font-family:Arial; font-weight:bold; font-size:22px; font-style:italic;" textshadow="2" />
	<layer name="skin_buttonglow"   keep="true" style="skin_base" crop="64|384|64|64" align="center" x="0" y="0" alpha="0.0" visible="false" enabled="false" width="150%" height="PROP"/>
	<layer name="skin_thumbborder"  keep="true" url="vtourskin_thumbborder.png" visible="false" enabled="false" align="center" scale="1" ox="0" oy="0" width="100%" height="100%" scale9grid="20|20|160|60"/>

	<!-- Skin Events -->

	<events name="skin_events" keep="true"
	        onxmlcomplete="set(events[skin_events].onxmlcomplete,null); skin_startup();"
	        onnewscene="skin_showloading(false); skin_update_scene_infos();"
	        onnewpano="skin_showloading(false); skin_update_scene_infos();"
	        onremovepano="skin_showloading(false);"
	        onloadcomplete="skin_showloading(false);"
	        onresize="skin_onresize();"
	        />

	<!-- Alternative small screen layout for mobile devices (override/extend settings) -->

	<krpano devices="mobile">
		<layer name="skin_scroll_window">
			<layer name="skin_scroll_layer">
				<layer name="skin_topborder"/>
				<layer name="skin_title" css="text-align:left; color:#FFFFFF; font-family:Arial; font-weight:bold; font-size:26px;" />
				<layer name="skin_scroll_container">
					<layer name="skin_thumbs_container">
						<layer name="skin_thumbs_scrollleft"  scale="1" />
						<layer name="skin_thumbs_scrollright" scale="1" />
						<layer name="skin_thumbs_scrollindicator" height="6" />
						<layer name="skin_thumbs" height="200" />
					</layer>
					<layer name="skin_content_container">
						<layer name="skin_plan_container">
							<plugin name="planzoominbtn"/>
							<plugin name="planzoomoutbtn"/>
							<layer name="skin_plan_plans_container"/>
						</layer>
						<layer name="skin_onlinemaps_container"/>
						<layer name="skin_gallery_container"/>
						<layer name="skin_info_container"/>
						<layer name="skin_aboutus_container"/>
					</layer>
				</layer>
			</layer>
		</layer>

		<layer name="skin_control_bar" height="64" y="64" y_opened="64" y_closed="-64" >
			<layer name="skin_btmborder"/>
			
			<layer name="skin_btn_prev"			scale="1" y="0" align="left" x="0" />
			<layer name="skin_btn_thumbs"		scale="1" y="0" align="left" x="70" />
			<layer name="skin_btn_next"			scale="1" y="0" align="left" x="140" />
			<layer name="skin_btn_plan"   		scale="1" y="0" align="left" x="210" />
			<layer name="skin_btn_onlinemap"	scale="1" y="0" align="left" x="280" />
			<layer name="skin_btn_gallery"		enabled="false" visible="false" />
			<layer name="skin_btn_help"			scale="1" y="0" align="left" x="350" />
			<layer name="skin_btn_info"			scale="1" y="0" align="left" x="420" />

			<layer name="skin_btn_lt"	enabled="false" visible="false" />
			<layer name="skin_btn_rt"	enabled="false" visible="false" />
			<layer name="skin_btn_up"	enabled="false" visible="false" />
			<layer name="skin_btn_dn"	enabled="false" visible="false" />
			<layer name="skin_btn_in"	enabled="false" visible="false" />
			<layer name="skin_btn_ou"	enabled="false" visible="false" />
			
			<layer name="skin_btn_quit"	enabled="false" visible="false" />
			<layer name="skin_btn_jni"			scale="1" x="10"/>

			<layer name="skin_btn_hide"			x="10"	y="60"	scale="1" />
			<layer name="skin_btn_show"			x="10"	y="-60"	scale="1" />
		</layer>

		<layer name="skin_loadingtext" css="text-align:center; color:#FFFFFF; font-family:Arial; font-weight:bold; font-style:italic; font-size:44px;" />
		<layer name="skin_buttonglow"  scale="2.0" />
		<layer name="skin_thumbborder" scale="1" />

		<style name="skin_thumbtext_style" css="text-align:center; color:#FFFFFF; font-family:Arial; font-weight:bold; font-size:20px;" />
	</krpano>

	<!-- Skin Actions -->

	<action name="skin_startup">
		if(device.mobile, mul(skin_settings.controlbar_offset, 2););
		copy(layer[skin_control_bar].y, skin_settings.controlbar_offset);
		copy(layer[skin_control_bar].y_opened, skin_settings.controlbar_offset);
		add(layer[skin_scroll_window].y, layer[skin_control_bar].height, layer[skin_control_bar].y);
		add(layer[skin_scroll_window].y_opened, layer[skin_control_bar].height, layer[skin_control_bar].y_opened);

		if(skin_settings.thumbs_opened, set(layer[skin_thumbs].state,'opened'); set(layer[skin_thumbs_container].visible,true); );

		copy(layer[skin_thumbs].draggable, skin_settings.thumbs_dragging);

		skin_addthumbs();
		skin_onresize();
		skin_updatescroll();
	</action>

	<action name="skin_addthumbs_">
		copy(thumbwidth, skin_settings.thumbs_width);
		copy(thumbheight, skin_settings.thumbs_height);
		copy(thumbpadding, skin_settings.thumbs_padding);
		copy(thumbcrop, skin_settings.thumbs_crop);

		if(device.mobile,
			mul(thumbwidth,2);
			mul(thumbheight,2);
			mul(thumbpadding,2);
		  );

		add(thumbxoffset, thumbwidth, thumbpadding);
		mul(thumbxcenter, thumbxoffset, 0.5);
		mul(thumbbarwidth, thumbxoffset, scene.count);
		add(thumbbarwidth, thumbpadding);
		add(thumbbarheight, thumbpadding, thumbheight);
		add(thumbbarheight, thumbpadding);

		if (skin_settings.thumbs_scrollindicator,
			copy(layer[skin_thumbs_scrollindicator].y, thumbbarheight);
			add(thumbbarheight, layer[skin_thumbs_scrollindicator].height);
		);

		copy(layer[skin_thumbs].height, thumbbarheight);
		copy(layer[skin_thumbs].width, thumbbarwidth);

		mul(halfheight, thumbbarheight, 0.5);
		copy(layer[skin_thumbs_scrollleft].y, halfheight);
		copy(layer[skin_thumbs_scrollright].y, halfheight);

		for(set(i,0), i LT scene.count, inc(i),
			txtadd(thumbname,'skin_thumb_',get(i));
			addlayer(get(thumbname));
			copy(layer[get(thumbname)].url, scene[get(i)].thumburl);
			set(layer[get(thumbname)].keep, true);
			set(layer[get(thumbname)].parent, 'skin_thumbs');
			set(layer[get(thumbname)].align, lefttop);
			copy(layer[get(thumbname)].crop, thumbcrop);
			copy(layer[get(thumbname)].width, thumbwidth);
			copy(layer[get(thumbname)].height, thumbheight);
			mul(thumbx, i, thumbxoffset);
			add(thumbx, thumbpadding);
			copy(layer[get(thumbname)].x, thumbx);
			copy(layer[get(thumbname)].y, thumbpadding);
			add(scene[get(i)].thumbx, thumbx, thumbxcenter);
			copy(scene[get(i)].thumby, thumbpadding);
			set(layer[get(thumbname)].linkedscene, get(scene[get(i)].name) );
			set(layer[get(thumbname)].onclick, copy(layer[skin_thumbborder].parent, name); loadscene(get(linkedscene), null, MERGE, BLEND(0.5)); );
			
			settitle(get(scene[get(i)].title));
			if(finaltitle != null, set(scene[get(i)].title,get(finaltitle)););
			
			if(skin_settings.tooltips_thumbs,
				set(layer[get(thumbname)].onhover, showtext(get(scene[get(linkedscene)].title),SKIN_TOOLTIPS); );
			  );
			if(skin_settings.thumbs_text,
				txtadd(thumbtext, 'skin_thumbtext_', get(i));
				addlayer(get(thumbtext));
				layer[get(thumbtext)].loadstyle(skin_thumbtext_style);
				set(layer[get(thumbtext)].keep, true);
				set(layer[get(thumbtext)].parent, get(thumbname));
				set(layer[get(thumbtext)].html, get(scene[get(i)].title));
			  );
			
			txtadd(thumbmediaiconname,'skin_thumbmediaicon_',get(i));
			addlayer(get(thumbmediaiconname));
			set(layer[get(thumbmediaiconname)].keep, true);
			set(layer[get(thumbmediaiconname)].parent, get(thumbname));
			set(layer[get(thumbmediaiconname)].enabled, 'false');
			set(layer[get(thumbmediaiconname)].capture, 'false');
			set(layer[get(thumbmediaiconname)].align, bottomleft);  
  			if( scene[get(i)].hasvideo
				, set(layer[get(thumbmediaiconname)].url, '%SWFPATH%/skin/panomediaicon.png');
				, set(layer[get(thumbmediaiconname)].url, '%SWFPATH%/skin/panonomediaicon.png');
			);
			if(device.mobile, trace(scale); set(layer[get(thumbmediaiconname)].scale, 2););
		);
	</action>

	<action name="skin_onresize">
		mul(mh, stageheight, -1);
		if(layer[skin_thumbs].state == 'opened', add(mh,layer[skin_thumbs].height); );
		if(layer[skin_content_container].state == 'opened', sub(hh,stageheight,skin_settings.controlbar_offset); sub(hh,layer[skin_control_bar].height); sub(hh,32); copy(layer[skin_content_container].height, hh); add(mh,hh); );
		set(layer[skin_scroll_layer].y, get(mh));
		ifnot(device.mobile, if(stagewidth LT 780, skin_set_navibuttons_visibility(false);, skin_set_navibuttons_visibility(true);););
		if(device.mobile, if(stagewidth LT 610, skin_set_buttons_visibility(false);, skin_set_buttons_visibility(true);););
	</action>

	<action name="skin_set_navibuttons_visibility">
		set(layer[skin_btn_lt].visible, %1);
		set(layer[skin_btn_rt].visible, %1);
		set(layer[skin_btn_up].visible, %1);
		set(layer[skin_btn_dn].visible, %1);
		set(layer[skin_btn_in].visible, %1);
		set(layer[skin_btn_ou].visible, %1);
	</action>

	<action name="skin_set_buttons_visibility">
		set(layer[skin_btn_prev].visible, %1);
		set(layer[skin_btn_next].visible, %1);
		set(layer[skin_btn_onlinemap].visible, %1);
		set(layer[skin_btn_help].visible, %1);
		ifnot(%1,
			set(layer[skin_btn_thumbs].x, 0);
			set(layer[skin_btn_plan].x, 60);
			set(layer[skin_btn_info].x, 120);
		,
			set(layer[skin_btn_thumbs].x, 70);
			set(layer[skin_btn_plan].x, 210);
			set(layer[skin_btn_info].x, 420);
		);
	</action>


	<action name="skin_updatescroll">
		if(layer[skin_thumbs].loaded,
			set(cursceneindex, 0);
			if(xml.scene, copy(cursceneindex, scene[get(xml.scene)].index));
			layer[skin_thumbs].setcenter(get(scene[get(cursceneindex)].thumbx), get(scene[get(cursceneindex)].thumby));
		  );
	</action>

	<action name="skin_updatethumbscroll">
		copy(padding,skin_settings.thumbs_padding);
		if(device.mobile, mul(padding,2));

		if(skin_settings.thumbs_scrollbuttons,
			if(loverflow GT 0, set(layer[skin_thumbs_scrollleft].visible,true),  set(layer[skin_thumbs_scrollleft].visible,false) );
			if(roverflow GT 0, set(layer[skin_thumbs_scrollright].visible,true), set(layer[skin_thumbs_scrollright].visible,false) );
		  );

		if(skin_settings.thumbs_scrollindicator,
			if(woverflow GT 0,
				set(layer[skin_thumbs_scrollindicator].visible,true);
				sub(iw,pixelwidth,woverflow);
				div(pw,iw,pixelwidth);
				div(px,loverflow,woverflow);
				mul(pw,iw);
				copy(layer[skin_thumbs_scrollindicator].width,pw);
				sub(iw,pw);
				sub(iw,padding);
				sub(iw,padding);
				mul(px,iw);
				add(px,padding);
				copy(layer[skin_thumbs_scrollindicator].x,px);
			  ,
				set(layer[skin_thumbs_scrollindicator].visible,false);
			  );
		  );
	</action>

	<action name="skin_update_scene_infos">
		if(xml.scene !== null,
			if(scene[get(xml.scene)].index GE 0,
				if(title, txtadd(layer[skin_title].html, get(title), ' - ', get(scene[get(xml.scene)].title) ); , copy(layer[skin_title].html, scene[get(xml.scene)].title ); );
				delayedcall(0.1, set(layer[skin_title].visible,true) );
		
				if(scene[get(xml.scene)].index GT 0,
					set(layer[skin_btn_prev].enabled, true);
					set(layer[skin_btn_prev].alpha, 1.0);
				  ,
					set(layer[skin_btn_prev].enabled, false);
					set(layer[skin_btn_prev].alpha, 0.3);
				  );
		
				sub(lastsceneindex, scene.count, 1);
				if(scene[get(xml.scene)].index LT lastsceneindex,
					set(layer[skin_btn_next].enabled, true);
					set(layer[skin_btn_next].alpha, 1.0);
				  ,
					set(layer[skin_btn_next].enabled, false);
					set(layer[skin_btn_next].alpha, 0.3);
				  );
		
				txtadd(layer[skin_thumbborder].parent, 'skin_thumb_', get(scene[get(xml.scene)].index));
				set(layer[skin_thumbborder].visible, true);
		
				if(scene[get(xml.scene)].mapspotname,
					layer[skin_content_container].activatespot(get(scene[get(xml.scene)].mapspotname));
					layer[skin_content_container].pantospot(get(scene[get(xml.scene)].mapspotname));
				  );
			  );
		  );
	</action>

	<action name="skin_nextscene">
		add(newsceneindex, scene[get(xml.scene)].index, %1);
		if(newsceneindex GE 0,
			if(newsceneindex LT scene.count,
				txtadd(layer[skin_thumbborder].parent, 'skin_thumb_', get(newsceneindex));
				layer[skin_thumbs].scrolltocenter(get(scene[get(newsceneindex)].thumbx), get(scene[get(newsceneindex)].thumby));
				loadscene(get(scene[get(newsceneindex)].name), null, MERGE, BLEND(0.5));
			  );
		  );
	</action>

	<action name="skin_nextscene_loop">
		add(newsceneindex, scene[get(xml.scene)].index, %1);
		sub(lastsceneindex, scene.count, 1);
		if(newsceneindex LT 0, copy(newsceneindex,lastsceneindex));
		if(newsceneindex GT lastsceneindex, set(newsceneindex,0));
		layer[skin_thumbs].scrolltocenter(get(scene[get(newsceneindex)].thumbx), get(scene[get(newsceneindex)].thumby));
		loadscene(get(scene[get(newsceneindex)].name), null, MERGE, BLEND(0.5));
	</action>

	<action name="skin_buttonglow">
		if(%1 != null,
			set(strength,0.7);
			if(%2 != null, set(strength,%2));
			set(layer[skin_buttonglow].parent, %1);
			set(layer[skin_buttonglow].visible, true);
			tween(layer[skin_buttonglow].alpha, get(strength), 0.07);
		  ,
			tween(layer[skin_buttonglow].alpha, 0.0, 0.1, default, set(layer[skin_buttonglow].parent, null); set(layer[skin_buttonglow].visible, false); );
		  );
	</action>

	<action name="skin_hideskin">
		if(layer[skin_content_container].state != 'closed', skin_showcontent_container(ee, false); wait(0.4); );
		if(layer[skin_thumbs].state != 'closed', skin_showthumbs(false); wait(0.25); );
		tween(layer[skin_scroll_window].y, get(layer[skin_scroll_window].y_closed), 0.5, easeOutQuint);
		tween(layer[skin_control_bar].y, get(layer[skin_control_bar].y_closed), 0.5, easeOutQuint);
		set(layer[skin_btn_show].visible,true);
		tween(layer[skin_btn_show].alpha, 1, 0.25, easeOutQuint);
		set(layer[skin_btn_hide].visible,false);
		tween(layer[skin_btn_hide].alpha, 0, 0.25, easeOutQuint);
	</action>

	<action name="skin_showskin">
		tween(layer[skin_scroll_window].y, get(layer[skin_scroll_window].y_opened), 0.5, easeOutQuint);
		tween(layer[skin_control_bar].y, get(layer[skin_control_bar].y_opened), 0.5, easeOutQuint);
		set(layer[skin_btn_show].visible,false);
		tween(layer[skin_btn_show].alpha,0,0);
		set(layer[skin_btn_hide].visible,true);
		tween(layer[skin_btn_hide].alpha, 1, 0.25, easeOutQuint);
	</action>

	<action name="skin_showthumbs">
		if(%1 == null, if(layer[skin_thumbs].state == 'closed', set(show,true), set(show,false)); , set(show,%1); );
		mul(mh, layer[skin_scroll_layer].pixelheight, -1);
		if(layer[skin_scroll_layer].y == -100%, copy(layer[skin_scroll_layer].y,mh));
		if(show,
			set(layer[skin_thumbs].state, 'opened');
			add(mh, layer[skin_thumbs].height);
			tween(layer[skin_scroll_layer].y, get(mh), 0.5, easeOutQuint);
			set(layer[skin_thumbs_container].visible, true);
			tween(layer[skin_thumbs_container].alpha, 1.0, 0.25);
			tween(layer[skin_content_container].alpha, 0.0, 0.25, default, set(layer[skin_content_container].visible,false));
		  ,
			set(layer[skin_thumbs].state, 'closed');
			tween(layer[skin_scroll_layer].y, get(mh), 0.5, easeOutQuint, set(layer[skin_thumbs_container].visible, false););
		  );
	</action>

	<action name="skin_showcontent_container">
		if(%2 == null, if(layer[skin_content_container].state == 'closed', set(show,true);, if(layer[skin_content_container].active_content == %1, set(show,false);, set(show,true););); ,set(show,%2););
		mul(mh, layer[skin_scroll_layer].pixelheight, -1);
		if(layer[skin_scroll_layer].y == -100%, copy(layer[skin_scroll_layer].y,mh));
		if(show,
			tween(layer[skin_logo].alpha, 0.0, 0.25, default, set(layer[skin_logo].visible,false));
			tween(layer[skin_thumbs_container].alpha, 0.0, 0.25, default, set(layer[skin_thumbs_container].visible,false));
			set(layer[skin_content_container].visible, true);
			tween(layer[skin_content_container].alpha, 1.0, 0.25);
			set(layer[skin_content_container].state, 'opened');
			sub(hh,stageheight,skin_settings.controlbar_offset);
			sub(hh,layer[skin_control_bar].height);
			sub(hh,32);
			add(mh,hh);
			copy(layer[skin_content_container].height, hh);
			tween(layer[skin_scroll_layer].y, get(mh), 0.5, easeOutQuint);
			
			set(layer[get(layer[skin_content_container].active_content)].visible, false);
			set(layer[%1].visible, true);
			set(layer[skin_content_container].active_content, %1);
		  ,
			set(layer[skin_content_container].state, 'closed');
			set(layer[skin_logo].visible, true); tween(layer[skin_logo].alpha, 1.0, 0.25);
			tween(layer[skin_scroll_layer].y, get(mh), 0.5, easeOutQuint, set(layer[skin_content_container].visible,false) );
		  );
	</action>

	<action name="settitle" >
		set(finaltitle, get(maptxt-%1));
	</action>
	
	<action name="skin_showloading">
		if(false, trace(fakeshowloading););
	</action>
	
	<action name="zoomplan" >
		if(%2 LT 0
		,
			div(plugin[get(activeplan)].scale, 1.1);
			trace();
		,
			mul(plugin[get(activeplan)].scale, 1.1);
		);
		mul(finalwidth, plugin[get(activeplan)].imagewidth, plugin[get(activeplan)].scale );
		mul(finalheight, plugin[get(activeplan)].imageheight, plugin[get(activeplan)].scale );
		set(layer[skin_plan_plans_container].width, get(finalwidth)); 
		set(layer[skin_plan_plans_container].height, get(finalheight));
	</action>

	<action name="zoomcontent" >
		if(%2 LT 0
		,
			div(plugin[%1].scale, 1.1);
			trace();
		,
			mul(plugin[%1].scale, 1.1);
		);
		mul(finalwidth, plugin[%1].imagewidth, plugin[%1].scale );
		mul(finalheight, plugin[%1].imageheight, plugin[%1].scale );
		set(layer[get(layer[%1].parent)].width, get(finalwidth)); 
		set(layer[get(layer[%1].parent)].height, get(finalheight));
	</action>

	<action name="initcontentsize">
	if(plugin[%1].isloaded
	,
		div(hratio,get(stageheight), get(plugin[%1].height));
		div(wratio,get(stagewidth), get(plugin[%1].width));
		if(hratio LT wratio
			, set(contentratio, get(hratio));
			, set(contentratio, get(wratio));
		);
		mul(plugin[%1].scale, get(contentratio), 0.9);
		mul(finalwidth, plugin[%1].imagewidth, plugin[%1].scale );
		mul(finalheight, plugin[%1].imageheight, plugin[%1].scale );
		set(layer[get(layer[%1].parent)].width, get(finalwidth)); 
		set(layer[get(layer[%1].parent)].height, get(finalheight));
		
	,
		delayedcall(0.1, initmapsize(%1););
	);
	</action>

</krpano>